{"version":3,"sources":["scripts/main.js"],"names":["sortList","ul","newUl","cloneNode","lis","parseEmployees","sort","a","b","convertSalary","i","length","append","replaceWith","x","parseFloat","dataset","salary","replace","list","res","childNodes","nodeType","push","getEmployees","employeesNodes","employee","name","innerText","position","age","document","querySelector"],"mappings":";AAAA,aAEA,SAASA,EAASC,GACVC,IAAAA,EAAQD,EAAGE,WAAU,GAErBC,EAAMC,EAAeJ,GAE3BG,EAAIE,KAAK,SAASC,EAAGC,GACZC,OAAAA,EAAcD,GAAKC,EAAcF,KAGrC,IAAA,IAAIG,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IAC9BR,EAAMU,OAAOR,EAAIM,IAGnBT,EAAGY,YAAYX,GAGjB,SAASO,EAAcK,GACdC,OAAAA,WAAWD,EAAEE,QAAQC,OAAOC,QAAQ,QAAS,KAGtD,SAASb,EAAec,GAGjB,IAFCC,IAAAA,EAAM,GAEHV,EAAIS,EAAKE,WAAWV,OAAQD,GAAK,EAAGA,IACvCS,EAAKE,WAAWX,IAAsC,IAAhCS,EAAKE,WAAWX,GAAGY,UAC3CF,EAAIG,KAAKJ,EAAKE,WAAWX,IAItBU,OAAAA,EAGT,SAASI,EAAavB,GAIf,IAHCwB,IAAAA,EAAiBpB,EAAeJ,GAChCmB,EAAM,GAEHV,EAAI,EAAGA,EAAIe,EAAed,OAAQD,IAAK,CACxCgB,IAAAA,EAAW,CACfC,KAAMF,EAAef,GAAGkB,UACxBC,SAAUJ,EAAef,GAAGM,QAAQa,SACpCZ,OAAQR,EAAcgB,EAAef,IACrCoB,IAAKf,WAAWU,EAAef,GAAGM,QAAQc,MAG5CV,EAAIG,KAAKG,GAGJN,OAAAA,EAGTpB,EAAS+B,SAASC,cAAc,OAEhCR,EAAaO,SAASC,cAAc","file":"main.337b0995.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction sortList(ul) {\n  const newUl = ul.cloneNode(false);\n\n  const lis = parseEmployees(ul);\n\n  lis.sort(function(a, b) {\n    return convertSalary(b) - convertSalary(a);\n  });\n\n  for (let i = 0; i < lis.length; i++) {\n    newUl.append(lis[i]);\n  }\n\n  ul.replaceWith(newUl);\n}\n\nfunction convertSalary(x) {\n  return parseFloat(x.dataset.salary.replace(/\\$|,/g, ''));\n}\n\nfunction parseEmployees(list) {\n  const res = [];\n\n  for (let i = list.childNodes.length; i >= 0; i--) {\n    if (list.childNodes[i] && list.childNodes[i].nodeType === 1) {\n      res.push(list.childNodes[i]);\n    }\n  }\n\n  return res;\n}\n\nfunction getEmployees(ul) {\n  const employeesNodes = parseEmployees(ul);\n  const res = [];\n\n  for (let i = 0; i < employeesNodes.length; i++) {\n    const employee = {\n      name: employeesNodes[i].innerText,\n      position: employeesNodes[i].dataset.position,\n      salary: convertSalary(employeesNodes[i]),\n      age: parseFloat(employeesNodes[i].dataset.age),\n    };\n\n    res.push(employee);\n  }\n\n  return res;\n}\n\nsortList(document.querySelector('ul'));\n\ngetEmployees(document.querySelector('ul'));\n"]}